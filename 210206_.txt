*그래프의 표현과 정의
-- 방향, 무향, 가중치, 다중 그래프
-- 트리("간선통해"두정점을잇는딱 하나) !=단순그래프(두정점최대한개간선)p.813
-- 이분 그래프(서로다른그룹간선만), DAG
-- 단순경로, 한정점두번(별도로이야기), 사이클
-- 인접행렬표현, 인접리스트표현 =>희소그래프(E < V2),밀집그래프(V 2<=E)=>공간

*그래프의 깊이우선탐색 =>(연상)재귀적
-- 재귀적성질,  시간복잡도(V2 ) 적은메모리
-- 해없는상황 무의미한탐색회피?? => 어떤 특정 조건이 있을 시,
-- 모든 경로 탐색, 최단경로보장(X), 찾는노드깊은곳=>BFS보다빠름
-- 모든 경로 탐색 시, 중복되는 상황을 DP 로 해결

*위상정렬 =>(연상)좌->우
-- 의존성그래프(좌->우),정렬=>DAG=>순서반대
-- "차수 이용(InDegee[i])"=>Queue(BFS) or DFS 이용
-- 위상정렬결과의 역방향간선이란??
-- ex)BOJ_1766 문제집(위상정렬), BOJ_1005 ACMCraft=>(DP,위상정렬)

*오일러서킷 =>(연상)(u=v)
-- "모든간선을 정확히한번씩"지나서 시작점
-- 간선들이 두 개 이상의 컴포넌트에 나뉘어있는경우
-- 정점의차수, 홀수점, 짝수점
-- 오일러서킷을 찾아내는 알고리즘-(DFS) => O(|V||E|)
-- 두 서킷으로 나누어질 경우=>재귀적(while)=>(무향그래프)
-- "오일러트레일(u!=v)" => (a,b)=>추가(b,a)
-- 방향그래프에서의 오일러서킷,오일러트레일
-- ex)단어제한끝말잇기(오일러서킷,트레일 구분) ,단어의처음과끝그래프만들기

*DFS 간선의 분류
-- DFS스패닝트리=>(분류) 트리간선, 순방향간선, 역방향간선, 교차간선
--  무향그래프에서의 교차간선의미는? =>순방향간선, 순방향간선 = 역방향간선
-- 사이클존재여부 = 역방향간선존재여부
-- 발견순서(Discovered) 정보이용=>각 간선의분류마다의 상황

*절단점 찾기 알고리즘
-- 절단점이란?? =>간선모두지웠을때,"컴포넌트 두개 이상"
-- 무향그래프의특징
-- 정점의최소깊이, 역방향간선, (그림28.10)"1,2" 정점의차이
-- 이중결합컴포넌트(Biconnected Comp)

*강결합컴포넌트분리(SCC)-타잔알고리즘 =>(연상)사이클
-- 방향그래프, DAG => 그래프압축
-- 정점의최소깊이, 역방향간선, + 교차간선(Scc속하는지)
-- 역순, Discoverd, SccId, Stack,,  시간복잡도는??
-- 돌아가는과정 생각





