@C++ 기초 플러스 복습

@포인터
- 참고링크 - 포인터(위키)

-- 모든 변수는 어디에 저장되나??
-- const와 같은 고정값 변수 외의 모든 변수는 메모리 중에 ??에 할당.
-- 이러한 메모리의 공간을 구별하는 것이 ??값.
--  주소로 각각의 위치를 구별한다. 포인터 변수 모두는 메모리의 주소를 지정하는 값을 가진다.
 데이터가 존재하는 주소값을 사용하여 액세스.
즉, 어떤 번지의 메모리에 값을 쓰거나 또는 읽어 오는 방식.
정적변수 역시 메모리에 배치되고 결국은 주소값 가짐.
*정적변수와 포인터변수의 차이점은??
=> 주소값을 가지고 액세스
=> 기계어 코드에 주소값을 고정하는 방식
=> '지역변수' 는 스택 또는 CPU의 레지스터 사용해 위치값 설정.
=> 포인터 변수는 메모리에 주소값을 저장하는 방식.
*직접주소방식

*포인터연산
=> 포인터의 크기는??
- 포인터 참고링크 - https://www.acmicpc.net/blog/view/32 (백준)
=> 아래 코드의 문제는?? 어떻게 고쳐야하나??
```
int func(int **a) 
{ 
    return a[3][2]; 
} 
int main() 
{ 
    int a[10][20] = {}; 
    a[3][2] = 3; 
    printf("%d", func(a)); 
}
```


@레지스터
- 참고링크 - 프로세서 레지스터
-- 레지스터란??
-- 메모리 계층의 어디??
-- 장점은??, 레지스터의 종류??


@캐시
- 참고링크 - 캐시 ,CPU 캐시,
-- 캐시의 목적은??
-- 메모리 접근 속도, CPU 의 처리 속도
-- 캐시가 효율적으로 동작하려면?? => 데이터 지역성
=> 시간적 지역성, 공간적 지역성
=> 캐시의 종류
CPU 캐시, 디스크 캐시, 페이지 캐시... 등

@CPU 캐시
- 참고링크 - CPU 캐시
-- 위치데이터
-- 언제 접근되어지는가?? 
-- 그렇다면 어떤 방식으로 동작하는가??
-- 캐시의 레이턴시(Latency), 히트 속도(Hit Rate)
-- 1차캐시, 2차캐시, 3차캐시(L3),, 외부캐시, 내부캐시


*그렇다면 '레지스터' 와 '캐시' 의 관계는 무엇인가?? 차이점은??

