@알고리즘1(종만북)

*동적계획법
ex) K번째 최대 증가 부분 수열(LIS)
=> LIS 개수세기,  Skip 이용해 정렬하면서 K 번째 구하기
=> sort ( NlogN ) 없애고 N2 으로 돌게하는 방법
=> ex) 2, 1, 4, 3, 6, 5, 8, 7, 10, 9

*알고리즘 문제풀기
-- BaekJoon 작업(위상정렬,DP)  https://www.acmicpc.net/problem/2056

-- BaekJoon 기타리스트 https://www.acmicpc.net/problem/1495
=> Dp[Y][X] 란 무엇을 의미하는가??, 부분문제를 찾아라, 기저사례를 확인해라

-- BeakJoon 극장좌석 https://www.acmicpc.net/problem/2302
=> 왜 우리가 아는 수열로 풀 수 있는가??
D[i] : VIP석 없이 1~i을 배치할 경우의 수
D[N]을 구하기 위해 N번 학생이 어디에 앉는지로 케이스 나누자.
Case 1 - N번 학생이 N번 자리에 앉는 경우 : 1~N-1번 학생들을 잘 앉히면 되므로 D[N-1]
Case 2 - N번 학생이 N-1번 자리에 앉는 경우 : N-1번 학생은 반드시 N번 자리에 앉아야하고,
나머지 1~N-2번 학생들을 잘 앉히면 되므로 D[N-2]

따라서, D[N] = D[N-1]+D[N-2]가 되고, 초기항 D[1] = 1, D[2] = 2
