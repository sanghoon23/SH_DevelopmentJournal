@알고리즘 ( 종만북 ) 

*접미사 배열 정확하게 이해하기
-- 정렬을 위한 (맨버 마이어스 알고리즘) 
-- 랭크개념 과 기수정렬 사용
-- 기수정렬
ex) 위키 - https://ko.wikipedia.org/wiki/%EA%B8%B0%EC%88%98_%EC%A0%95%EB%A0%AC
```
170, 45, 75, 90, 2, 24, 802, 66
```

와 같이 데이터가 주어졌을 때, 수열의 1의 자리만 보고 정렬을 수행하면,
```
170, 90, 2, 802, 24, 45, 75, 66
```

이 된다. 이 수열을 가지고 다시 10의 자리에 대해 정렬을 하면,
```
2, 802, 24, 45, 66, 170, 75, 90
```

가 된다. 마지막으로 100의 자리에 대해 정렬을 하면,
```
2, 24, 45, 66, 75, 90, 170, 802
```


=> 따라서,  접미사의 1, 2, 4, 8, ... 16 (2t) 의 기준으로 정렬하게 됨
0. 예시는 흔히 드는 ' mississipi  ' 로,
1. Perm(문자열의시작위치), Group, T(그룹이 같으면 비교할자릿수=>시작위치 + T)
2. Perm 정렬(Group기준), (처음엔 Group의원소는모두다르며, T = 1)
3. 새로운 Group 생성,  (Perm기준) => Group[Perm[i]] 는 모두 다르므로,Group[A] < Group[B]
4. Group[A] < Group[B](Group[Perm[i - 1]] < Group[Perm[i]] 가 True 라면, 
	   다른 그룹이란 얘기이므로, NewGroup[Perm[i]] = NewGroup[Perm[i - 1]] + 1;
	   만약 같다면(false) 같은 문자이므로 같은 NewGroup 으로 묶어준다.
6. T <<= 1 , 자릿수를 2배씩 늘려준다. why?? 
	이미 각 시작위치의 접미사는 처음에 정렬된다.
	Group[A] == Group[B] 라면, Group[A + T] <  Group[B + T] 를 보기 때문에
	1,2 번째 순으로 정렬된 각 시작위치의 접미사가 남게된다.
	만약 mississipi 의 ssissipi 에서 s, s 가 Group 에 정렬되었다면,
	issipi 도 똑같이 i, s 도 Group에 맞춰 정렬되어있다.
	이 때, 만약 ssissipi 와 같은 그룹에 속해있는 문자 sissipi 가 있다면
	T번째 글자를 비교하면 된다.... 예시인 ssissipi / sissipi 도 첫번째 T=1 일 때 정렬된다.
	쉽게 설명이 안된다;;
	
7. 처음 sort 시, T = 1 이고, Group[i] = Str[i] 란 걸 명심해라.
	   이 때, 같은 Str[i] 라면 다음 글자 ( 이때, T = 1 ) 를 기준으로 Perm 이 정렬된다.
	또한 Compare 시 들어오는 A, B 값은 접미사의 시작위치이다.
	즉, A + T, B + T ==>> 접미사의시작위치 + T
	이 때, Group[A + T] 가 Group[N] 이 될 수 있다. ex) mississipi 의 'i' (9) 이다.
	이 상황을 대비해 Group[N] = -1 넣어준다.
	
8. 위 과정을 반복한다. (T < N) 까지.
	
*LCP 이해하기 ( 최대공통접두사길이 )
-- 어렵게 이해한 접미사배열을 활용해서 LCP 를 만들 수 있다.
-- 이것을 이용해 부분문자열의 중복을 셀 수 있다.
-- 모든 부분문자열은
for(j)
	for(i = j) 의 계산으로 나타낼 수 있는데,
	여기서 i = j  이 시작점이 접미사가 된다.
	즉, 해당 시작점의 접미사가 모든 부분문자열을 포함하고 있단 소리
결국, 모든 문자열은 N * (N + 1) / 2 로 구할 수 있고,
중복된 곳의 개수는 각자리의 문자가 같은 곳이 몇번있는지의 개수이다.

-- ex) 응용, K 번 이상 등장하는 부분문자열

*KMP
-- 매칭될 때까지 T 에 대해 P(패턴) 이 같았다면, 
    그 시작위치를 접두사와 접미사가 같은 길이 만큼 옮긴다.
why??
=> 시적점부터 (일치된문자열 - 접두사와접미사가 같은 길이 ) 이 범위(K)까지는
이것은 답이 될 수가 없다.
즉, 범위(K)에서 시작한 문자열이 답이 될 수 없다는 소리
왜냐하면 위에 설명한 범위 바로 앞쪽에서 무조건 같지 않기 때문

